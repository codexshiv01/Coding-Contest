services:
  # PostgreSQL Database (using external Neon database)
  # Note: The application connects directly to the Neon database
  
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: coding-contest-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: coding-contest-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - redis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker-in-Docker execution
      - /tmp:/tmp  # Shared temp directory
    restart: unless-stopped

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coding-contest-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  redis_data:

networks:
  default:
    name: coding-contest-network
